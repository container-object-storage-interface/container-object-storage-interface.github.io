"use strict";(self.webpackChunkcosi=self.webpackChunkcosi||[]).push([[4128],{2214:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(5893),o=n(3905);const a={title:"Introduction",slug:"/"},i=void 0,s={id:"introduction",title:"Introduction",description:"&nbsp;",source:"@site/docs/introduction.md",sourceDirName:".",slug:"/",permalink:"/docs/",draft:!1,unlisted:!1,editUrl:"https://github.com/container-object-storage-interface/container-object-storage-interface.github.io/edit/master/docs/introduction.md",tags:[],version:"current",lastUpdatedBy:"Sidhartha Mani",lastUpdatedAt:1673554080,formattedLastUpdatedAt:"Jan 12, 2023",frontMatter:{title:"Introduction",slug:"/"},sidebar:"docs",next:{title:"Supported Kubernetes Releases",permalink:"/docs/kube_release_support"}},c={},l=[{value:"Container Object Storage Interface (COSI)",id:"container-object-storage-interface-cosi",level:2},{value:"Why another standard?",id:"why-another-standard",level:2}];function d(e){const t={em:"em",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:[(0,r.jsx)("img",{src:"https://img.shields.io/badge/status-alpha-yellow"})," \xa0 ",(0,r.jsx)("img",{src:"https://camo.githubusercontent.com/08c304eeca9212a219c763b7277f3395e2a580b1d07cfb49287e9fc5add3d19a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f61706956657273696f6e2d7631616c706861312d6c69676874677265656e"})]}),"\n",(0,r.jsx)(t.h2,{id:"container-object-storage-interface-cosi",children:"Container Object Storage Interface (COSI)"}),"\n",(0,r.jsx)(t.p,{children:"Container Object Storage Interface (COSI) is a set of abstractions for provisioning and management of object storage. It aims to be a common layer of abstraction across multiple object storage vendors, such that workloads can request and automatically be provisioned object storage buckets."}),"\n",(0,r.jsx)(t.p,{children:"The goals of this project are:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Automate object storage provisioning, access and management"}),"\n",(0,r.jsx)(t.li,{children:"Provide a common layer of abstraction for consuming object storage"}),"\n",(0,r.jsx)(t.li,{children:"Facilitate lift and shift of workloads across object storage providers (i.e. prevent vendor lock-in)"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"why-another-standard",children:"Why another standard?"}),"\n",(0,r.jsxs)(t.p,{children:["Kubernetes abstracts file/block storage via the CSI standard. The primitives for file/block storage do not extend well to object storage. Here is the ",(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.em,{children:"extremely"})})," concise and incomplete list of reasons why:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Unit of provisioned storage - Bucket instead of filesystem mount or blockdevice."}),"\n",(0,r.jsx)(t.li,{children:"Access is over the network instead of local POSIX calls."}),"\n",(0,r.jsx)(t.li,{children:"No common protocol for consumption across various implementations of object storage."}),"\n",(0,r.jsx)(t.li,{children:"Management policies and primitives - for instance, mounting and unmounting do not apply to object storage."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"The existing primitives in CSI do not apply to objectstorage. Thus the need for a new standard to automate the management of objectstorage."})]})}function u(e={}){const{wrapper:t}={...(0,o.ah)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},3905:(e,t,n)=>{n.d(t,{ah:()=>l});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),f=o,m=p["".concat(c,".").concat(f)]||p[f]||d[f]||a;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));u.displayName="MDXCreateElement"}}]);